#
# SPDX-FileCopyrightText: 2023 Lifely
# SPDX-License-Identifier: EUPL-1.2+
#
name: Build and Publish

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  JAVA_VERSION: '17'

permissions:
  contents: write
  packages: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Unit tests fail at the moment so skip them for now
      - name: Gradle build
        run: ./gradlew build -x test --info

  next-version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository including tags
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Determine the next semantic version based on the commit message tags
      - name: Get next tag
        id: get-tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: false
          DEFAULT_BUMP: patch
          WITH_V: true
          RELEASE_BRANCHES: main
      - name: Get next version
        id: get-version
        uses: frabert/replace-string-action@v2.4
        with:
          pattern: 'v(.*)'
          string: ${{ steps.get-tag.outputs.new_tag }}
          replace-with: '$1'

  publish:
    needs: [build, next-version]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Publish using Axion
        run: ./gradlew release

      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}